@page "/shoppinglists"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using JohnAssistantFSD.Domain
@using JohnAssistantFSD.Data
@implements IAsyncDisposable
@inject IDbContextFactory<JohnAssistantFSD.Data.JohnAssistantFSDContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="shoppinglists/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.ShoppingList">
    <PropertyColumn Property="shoppinglist => shoppinglist.Content" />
    <PropertyColumn Property="shoppinglist => shoppinglist.Amount" />
    <PropertyColumn Property="shoppinglist => shoppinglist.Cost" />
    <PropertyColumn Property="shoppinglist => shoppinglist.Bought" />
    <PropertyColumn Property="shoppinglist => shoppinglist.DateCreated" />
    <PropertyColumn Property="shoppinglist => shoppinglist.DateUpdated" />
    <PropertyColumn Property="shoppinglist => shoppinglist.CreatedBy" />
    <PropertyColumn Property="shoppinglist => shoppinglist.UpdatedBy" />

    <TemplateColumn Context="shoppinglist">
        <a href="@($"shoppinglists/edit?id={shoppinglist.Id}")">Edit</a> |
        <a href="@($"shoppinglists/details?id={shoppinglist.Id}")">Details</a> |
        <a href="@($"shoppinglists/delete?id={shoppinglist.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private JohnAssistantFSDContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
